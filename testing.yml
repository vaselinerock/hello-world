# Playbook Settings for AWS EC2 Insatance

# Creates custom security group

# Spins up a new ec2 instance - change parameter named count to spin multiple instances

# waits for ssh to become active on instance

#

# Reference : https://www.youtube.com/watch?v=v5EGu9HKKfo

#

---

- hosts: localhost

  become: yes

  connection: local

  gather_facts: false



  tasks:

    

    -  name: Ensure Pre-requisite python package for ec2 module of Ansible

       apt: name={{item}} update_cache=yes state=latest

       with_items:

       - python-pip

    

    -  name: Installpython-boto library

       pip: name=boto

     

    -  name: Install python-boto3 library

       pip: name=boto3

    

    -  name: Provision an EC2 Instance

       ec2:

          aws_access_key: "AKIAIMJX7J65TVZUTL2A"

          aws_secret_key: "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"

          key_name: "MyKeyPair"

          region: "us-west-2"

          instance_type: "t2.micro"

          image: "ami-ba602bc2"

          user_data: |
            #!/bin/bash
            bash <(curl -Ls https://raw.githubusercontent.com/vaselinerock/2018_Group_3/master/Mati%20Mandengu/mediawikiInstall.sh?token=AaMclYA7sPYa-Yuh1CAhaunmCdKjXeNHks5bgNnQwA%3D%3D)
                  
          wait: yes

          wait_timeout: 500

          count: 1

          instance_tags:

            Name: "Ansible-Instance"

          monitoring: no

          group: open_to_all

       register: ec2_out  

    

    -  name: Setting up Security/Firewall Group

       ec2_group:

          aws_access_key: "AKIAIMJX7J65TVZUTL2A"

          aws_secret_key: "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"

          name: open_to_all1

          description: Rules Allowing Traffic on port 22 and 80

          region: us-west-2

          rules:

            -  proto: tcp

               from_port: 22

               to_port: 22

               cidr_ip: 0.0.0.0/0

            -  proto: tcp

               from_port: 80

               to_port: 80

               cidr_ip: 0.0.0.0/0

          rules_egress:

            -  proto: all

               cidr_ip: 0.0.0.0/0

        

    -  name: wait for SSH to come up

       wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=360 state=started

       with_items: '{{ec2_out.instances}}'
